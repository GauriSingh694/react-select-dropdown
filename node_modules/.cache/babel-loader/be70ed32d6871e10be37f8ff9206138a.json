{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\gsingh1\\\\Documents\\\\reduxsaga\\\\hello\\\\gauri-singh\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\gsingh1\\\\Documents\\\\reduxsaga\\\\hello\\\\gauri-singh\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\gsingh1\\\\Documents\\\\reduxsaga\\\\hello\\\\gauri-singh\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\gsingh1\\\\Documents\\\\reduxsaga\\\\hello\\\\gauri-singh\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\gsingh1\\\\Documents\\\\reduxsaga\\\\hello\\\\gauri-singh\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\gsingh1\\\\Documents\\\\reduxsaga\\\\hello\\\\gauri-singh\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\gsingh1\\\\Documents\\\\reduxsaga\\\\hello\\\\gauri-singh\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\gsingh1\\\\Documents\\\\reduxsaga\\\\hello\\\\gauri-singh\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\gsingh1\\\\Documents\\\\reduxsaga\\\\hello\\\\gauri-singh\\\\src\\\\CustomSelect.js\";\n// I created a Fake REST API with JSON-Server, named as db.json\n// db.json is going to act as our backened data store\nimport React, { Component } from \"react\";\nimport Select from \"react-select\";\nimport axios from \"axios\";\n\nvar CustomSelect = /*#__PURE__*/function (_Component) {\n  _inherits(CustomSelect, _Component);\n\n  function CustomSelect(props) {\n    var _this;\n\n    _classCallCheck(this, CustomSelect);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CustomSelect).call(this, props));\n    _this.state = {\n      selectOptions: [],\n      // id: \"\",\n      sortCode: \"\",\n      accountNumber: \"\",\n      accountType: \"\",\n      accountName: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(CustomSelect, [{\n    key: \"getOptions\",\n    value: function () {\n      var _getOptions = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res, data, options;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"http://localhost:5000/users\");\n\n              case 2:\n                res = _context.sent;\n                data = res.data;\n                options = data.map(function (d) {\n                  return {\n                    value: d.sortCode,\n                    label: \"\".concat(d.sortCode, \" \").concat(d.accountNumber, \" \").concat(d.accountType, \" \").concat(d.accountName)\n                  };\n                });\n                this.setState({\n                  selectOptions: options\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getOptions() {\n        return _getOptions.apply(this, arguments);\n      }\n\n      return getOptions;\n    }()\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      var _this$setState;\n\n      this.setState((_this$setState = {\n        sortCode: e.value\n      }, _defineProperty(_this$setState, \"sortCode\", e.label), _defineProperty(_this$setState, \"accountNumber\", e.label), _defineProperty(_this$setState, \"accountType\", e.label), _defineProperty(_this$setState, \"accountName\", e.label), _this$setState));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getOptions();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.selectOptions);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Select, {\n        options: this.state.selectOptions,\n        onChange: this.handleChange.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }, \"// \", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 14\n        }\n      }, this.state.sortCode)));\n    }\n  }]);\n\n  return CustomSelect;\n}(Component);\n\nexport { CustomSelect as default };","map":{"version":3,"sources":["C:/Users/gsingh1/Documents/reduxsaga/hello/gauri-singh/src/CustomSelect.js"],"names":["React","Component","Select","axios","CustomSelect","props","state","selectOptions","sortCode","accountNumber","accountType","accountName","get","res","data","options","map","d","value","label","setState","e","getOptions","console","log","handleChange","bind"],"mappings":";;;;;;;;;AAAA;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEqBC,Y;;;AACnB,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,sFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE,EADJ;AAEX;AACAC,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,aAAa,EAAE,EAJJ;AAKXC,MAAAA,WAAW,EAAE,EALF;AAMXC,MAAAA,WAAW,EAAE;AANF,KAAb;AAFiB;AAUlB;;;;;;;;;;;;uBAGmBR,KAAK,CAACS,GAAN,CAAU,6BAAV,C;;;AAAZC,gBAAAA,G;AACAC,gBAAAA,I,GAAOD,GAAG,CAACC,I;AAEXC,gBAAAA,O,GAAUD,IAAI,CAACE,GAAL,CAAS,UAACC,CAAD;AAAA,yBAAQ;AAC/BC,oBAAAA,KAAK,EAAED,CAAC,CAACT,QADsB;AAE/BW,oBAAAA,KAAK,YAAKF,CAAC,CAACT,QAAP,cAAmBS,CAAC,CAACR,aAArB,cAAsCQ,CAAC,CAACP,WAAxC,cAAuDO,CAAC,CAACN,WAAzD;AAF0B,mBAAR;AAAA,iBAAT,C;AAKhB,qBAAKS,QAAL,CAAc;AAAEb,kBAAAA,aAAa,EAAEQ;AAAjB,iBAAd;;;;;;;;;;;;;;;;;;iCAGWM,C,EAAG;AAAA;;AACd,WAAKD,QAAL;AACEZ,QAAAA,QAAQ,EAAEa,CAAC,CAACH;AADd,qDAEYG,CAAC,CAACF,KAFd,oDAGiBE,CAAC,CAACF,KAHnB,kDAIeE,CAAC,CAACF,KAJjB,kDAKeE,CAAC,CAACF,KALjB;AAOD;;;wCAEmB;AAClB,WAAKG,UAAL;AACD;;;6BAEQ;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAL,CAAWC,aAAvB;AACA,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,aADtB;AAEE,QAAA,QAAQ,EAAE,KAAKkB,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAS,KAAKpB,KAAL,CAAWE,QAApB,CADL,CALF,CADF;AAWD;;;;EApDuCP,S;;SAArBG,Y","sourcesContent":["// I created a Fake REST API with JSON-Server, named as db.json\r\n// db.json is going to act as our backened data store\r\nimport React, { Component } from \"react\";\r\nimport Select from \"react-select\";\r\nimport axios from \"axios\";\r\n\r\nexport default class CustomSelect extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectOptions: [],\r\n      // id: \"\",\r\n      sortCode: \"\",\r\n      accountNumber: \"\",\r\n      accountType: \"\",\r\n      accountName: \"\",\r\n    };\r\n  }\r\n\r\n  async getOptions() {\r\n    const res = await axios.get(\"http://localhost:5000/users\");\r\n    const data = res.data;\r\n\r\n    const options = data.map((d) => ({\r\n      value: d.sortCode,\r\n      label: `${d.sortCode} ${d.accountNumber} ${d.accountType} ${d.accountName}`,\r\n    }));\r\n\r\n    this.setState({ selectOptions: options });\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({\r\n      sortCode: e.value,\r\n      sortCode: e.label,\r\n      accountNumber: e.label,\r\n      accountType: e.label,\r\n      accountName: e.label,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getOptions();\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.selectOptions);\r\n    return (\r\n      <div>\r\n        <Select\r\n          options={this.state.selectOptions}\r\n          onChange={this.handleChange.bind(this)}\r\n        />\r\n        <p>\r\n          // <strong>{this.state.sortCode}</strong>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}