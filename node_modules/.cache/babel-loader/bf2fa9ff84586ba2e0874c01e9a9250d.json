{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\gsingh1\\\\Documents\\\\reduxsaga\\\\hello\\\\gauri-singh\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\gsingh1\\\\Documents\\\\reduxsaga\\\\hello\\\\gauri-singh\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\gsingh1\\\\Documents\\\\reduxsaga\\\\hello\\\\gauri-singh\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\gsingh1\\\\Documents\\\\reduxsaga\\\\hello\\\\gauri-singh\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\gsingh1\\\\Documents\\\\reduxsaga\\\\hello\\\\gauri-singh\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\gsingh1\\\\Documents\\\\reduxsaga\\\\hello\\\\gauri-singh\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\gsingh1\\\\Documents\\\\reduxsaga\\\\hello\\\\gauri-singh\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _objectSpread from \"C:\\\\Users\\\\gsingh1\\\\Documents\\\\reduxsaga\\\\hello\\\\gauri-singh\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\gsingh1\\\\Documents\\\\reduxsaga\\\\hello\\\\gauri-singh\\\\src\\\\CustomSelect.js\";\n\n// I created a Fake REST API with JSON-Server, named as db.json\n// db.json is going to act as our backened data store\nimport React, { Component } from \"react\"; // import React, { Component } lets you do class Happy extends Component instead of class Menu extends React.Component. \n// It's less typing and duplication of the React namespace, which is generally a desired modern coding convention.\n\nimport Select from \"react-select\";\nimport axios from \"axios\";\nimport Tick from \"./Tick.png\";\n\nvar tick = function tick(e) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shoe-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: Tick,\n    alt: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }));\n}; // const dot = (color = '#ccc') => ({\n//   alignItems: 'center',\n//   display: 'flex',\n//   ':before': {\n//     backgroundColor: color,\n//     borderRadius: 10,\n//     content: '\" \"',\n//     display: 'block',\n//     marginRight: 8,\n//     height: 10,\n//     width: 10,\n//   },\n// });\n\n\nvar colourStyles = {\n  option: function option(styles, _ref) {\n    var data = _ref.data,\n        isDisabled = _ref.isDisabled,\n        isFocused = _ref.isFocused,\n        isSelected = _ref.isSelected;\n    return _objectSpread({}, styles, {\n      borderBottom: '2px dotted blue',\n      color: state.isSelected ? 'yellow' : 'black',\n      backgroundColor: state.isSelected ? 'green' : 'white'\n    });\n  },\n  control: function control(provided) {\n    return _objectSpread({}, provided, {\n      marginTop: \"5%\"\n    });\n  }\n};\n\nvar CustomSelect = /*#__PURE__*/function (_Component) {\n  _inherits(CustomSelect, _Component);\n\n  function CustomSelect(props) {\n    var _this2;\n\n    _classCallCheck(this, CustomSelect);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(CustomSelect).call(this, props));\n    _this2.state = {\n      selectOptions: [],\n      id: \"\",\n      sortCode: \"\",\n      accountNumber: \"\",\n      accountType: \"\",\n      accountName: \"\"\n    };\n    return _this2;\n  }\n\n  _createClass(CustomSelect, [{\n    key: \"getOptions\",\n    value: function () {\n      var _getOptions = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res, data, options;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"http://localhost:5000/users\");\n\n              case 2:\n                res = _context.sent;\n                data = res.data;\n                options = data.map(function (d) {\n                  return {\n                    value: d.id,\n                    label: \"\".concat(d.sortCode, \" \").concat(d.accountNumber, \" \").concat(d.accountType, \" \").concat(d.accountName)\n                  };\n                });\n                this.setState({\n                  selectOptions: options\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getOptions() {\n        return _getOptions.apply(this, arguments);\n      }\n\n      return getOptions;\n    }()\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.setState({\n        id: e.value,\n        sortCode: e.label // accountNumber: e.label,\n        // accountType: e.label,\n        // accountName: e.label,\n\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getOptions();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.selectOptions);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Select, {\n        options: this.state.selectOptions,\n        onChange: this.handleChange.bind(this),\n        styles: colourStyles,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }\n      }, this.state.sortCode)));\n    }\n  }]);\n\n  return CustomSelect;\n}(Component);\n\nexport { CustomSelect as default };","map":{"version":3,"sources":["C:/Users/gsingh1/Documents/reduxsaga/hello/gauri-singh/src/CustomSelect.js"],"names":["React","Component","Select","axios","Tick","tick","e","colourStyles","option","styles","data","isDisabled","isFocused","isSelected","borderBottom","color","state","backgroundColor","control","provided","marginTop","CustomSelect","props","selectOptions","id","sortCode","accountNumber","accountType","accountName","get","res","options","map","d","value","label","setState","getOptions","console","log","handleChange","bind"],"mappings":"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","sourcesContent":["// I created a Fake REST API with JSON-Server, named as db.json\r\n// db.json is going to act as our backened data store\r\n\r\n\r\nimport React, { Component } from \"react\";\r\n// import React, { Component } lets you do class Happy extends Component instead of class Menu extends React.Component. \r\n// It's less typing and duplication of the React namespace, which is generally a desired modern coding convention.\r\nimport Select from \"react-select\";\r\nimport axios from \"axios\";\r\nimport Tick from \"./Tick.png\";\r\n\r\nconst tick = (e) => {\r\n\treturn ( \r\n        <div className=\"shoe-container\">\r\n            <img src={Tick} alt=\"\"/>\r\n        </div>\r\n    );\r\n  }\r\n  // const dot = (color = '#ccc') => ({\r\n  //   alignItems: 'center',\r\n  //   display: 'flex',\r\n  \r\n  //   ':before': {\r\n  //     backgroundColor: color,\r\n  //     borderRadius: 10,\r\n  //     content: '\" \"',\r\n  //     display: 'block',\r\n  //     marginRight: 8,\r\n  //     height: 10,\r\n  //     width: 10,\r\n  //   },\r\n  // });\r\n\r\nconst colourStyles = {\r\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => ({\r\n      ...styles,\r\n      borderBottom: '2px dotted blue',\r\n    color: state.isSelected ? 'yellow' : 'black',\r\n    backgroundColor: state.isSelected ? 'green' : 'white'\r\n  }),\r\n  control: (provided) => ({\r\n    ...provided,\r\n    marginTop: \"5%\",\r\n  })\r\n}\r\n\r\nexport default class CustomSelect extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectOptions: [],\r\n      id: \"\",\r\n      sortCode: \"\",\r\n      accountNumber: \"\",\r\n      accountType: \"\",\r\n      accountName: \"\",\r\n    };\r\n  }\r\n\r\n  async getOptions() {\r\n    const res = await axios.get(\"http://localhost:5000/users\");\r\n    const data = res.data;\r\n\r\n    const options = data.map((d) => ({\r\n      value: d.id,\r\n      label: `${d.sortCode} ${d.accountNumber} ${d.accountType} ${d.accountName}`,\r\n    }));\r\n\r\n    this.setState({ selectOptions: options });\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({\r\n      id: e.value,\r\n      sortCode: e.label,\r\n      // accountNumber: e.label,\r\n      // accountType: e.label,\r\n      // accountName: e.label,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getOptions();\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.selectOptions);\r\n    return (\r\n      <div >\r\n        <Select\r\n          options={this.state.selectOptions}\r\n          onChange={this.handleChange.bind(this)}\r\n          styles={colourStyles}\r\n        />\r\n        <p>\r\n          <strong>{this.state.sortCode}</strong>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}