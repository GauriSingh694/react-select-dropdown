{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\gsingh1\\\\Documents\\\\reduxsaga\\\\hello\\\\gauri-singh\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\gsingh1\\\\Documents\\\\reduxsaga\\\\hello\\\\gauri-singh\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\gsingh1\\\\Documents\\\\reduxsaga\\\\hello\\\\gauri-singh\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\gsingh1\\\\Documents\\\\reduxsaga\\\\hello\\\\gauri-singh\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\gsingh1\\\\Documents\\\\reduxsaga\\\\hello\\\\gauri-singh\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\gsingh1\\\\Documents\\\\reduxsaga\\\\hello\\\\gauri-singh\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\gsingh1\\\\Documents\\\\reduxsaga\\\\hello\\\\gauri-singh\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _objectSpread from \"C:\\\\Users\\\\gsingh1\\\\Documents\\\\reduxsaga\\\\hello\\\\gauri-singh\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\gsingh1\\\\Documents\\\\reduxsaga\\\\hello\\\\gauri-singh\\\\src\\\\CustomSelect.js\";\n// I created a Fake REST API with JSON-Server, named as db.json\n// db.json is going to act as our backened data store\nimport React, { Component } from \"react\";\nimport Select from \"react-select\";\nimport axios from \"axios\";\nvar colourStyles = {\n  option: function option(styles, _ref) {\n    var data = _ref.data,\n        isDisabled = _ref.isDisabled,\n        isFocused = _ref.isFocused,\n        isSelected = _ref.isSelected;\n    // const color = chroma(data.color);\n    console.log({\n      data: data,\n      isDisabled: isDisabled,\n      isFocused: isFocused,\n      isSelected: isSelected\n    });\n    return _objectSpread({}, styles, {\n      backgroundColor: isFocused ? \"blue\" : null,\n      color: \"#333333\"\n    });\n  }\n};\n\nvar CustomSelect = /*#__PURE__*/function (_Component) {\n  _inherits(CustomSelect, _Component);\n\n  function CustomSelect(props) {\n    var _this;\n\n    _classCallCheck(this, CustomSelect);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CustomSelect).call(this, props));\n    _this.state = {\n      selectOptions: [],\n      id: \"\",\n      sortCode: \"\",\n      accountNumber: \"\",\n      accountType: \"\",\n      accountName: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(CustomSelect, [{\n    key: \"getOptions\",\n    value: function () {\n      var _getOptions = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res, data, options;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"http://localhost:5000/users\");\n\n              case 2:\n                res = _context.sent;\n                data = res.data;\n                options = data.map(function (d) {\n                  return {\n                    value: d.id,\n                    label: \"\".concat(d.sortCode, \" \").concat(d.accountNumber, \" \").concat(d.accountType, \" \").concat(d.accountName)\n                  };\n                });\n                this.setState({\n                  selectOptions: options\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getOptions() {\n        return _getOptions.apply(this, arguments);\n      }\n\n      return getOptions;\n    }()\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.setState({\n        id: e.value,\n        sortCode: e.label // accountNumber: e.label,\n        // accountType: e.label,\n        // accountName: e.label,\n\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getOptions();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.selectOptions);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Home\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Select, {\n        options: this.state.selectOptions,\n        onChange: this.handleChange.bind(this),\n        styles: colourStyles,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }, this.state.sortCode)));\n    }\n  }]);\n\n  return CustomSelect;\n}(Component);\n\nexport { CustomSelect as default };","map":{"version":3,"sources":["C:/Users/gsingh1/Documents/reduxsaga/hello/gauri-singh/src/CustomSelect.js"],"names":["React","Component","Select","axios","colourStyles","option","styles","data","isDisabled","isFocused","isSelected","console","log","backgroundColor","color","CustomSelect","props","state","selectOptions","id","sortCode","accountNumber","accountType","accountName","get","res","options","map","d","value","label","setState","e","getOptions","handleChange","bind"],"mappings":";;;;;;;;;AAAA;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,gBAACC,MAAD,QAAyD;AAAA,QAA9CC,IAA8C,QAA9CA,IAA8C;AAAA,QAAxCC,UAAwC,QAAxCA,UAAwC;AAAA,QAA5BC,SAA4B,QAA5BA,SAA4B;AAAA,QAAjBC,UAAiB,QAAjBA,UAAiB;AAC/D;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEL,MAAAA,IAAI,EAAJA,IAAF;AAAQC,MAAAA,UAAU,EAAVA,UAAR;AAAoBC,MAAAA,SAAS,EAATA,SAApB;AAA+BC,MAAAA,UAAU,EAAVA;AAA/B,KAAZ;AACA,6BACKJ,MADL;AAEEO,MAAAA,eAAe,EAAEJ,SAAS,GAAG,MAAH,GAAY,IAFxC;AAGEK,MAAAA,KAAK,EAAE;AAHT;AAKD;AATkB,CAArB;;IAYqBC,Y;;;AACnB,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,sFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE,EADJ;AAEXC,MAAAA,EAAE,EAAE,EAFO;AAGXC,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,aAAa,EAAE,EAJJ;AAKXC,MAAAA,WAAW,EAAE,EALF;AAMXC,MAAAA,WAAW,EAAE;AANF,KAAb;AAFiB;AAUlB;;;;;;;;;;;;uBAGmBpB,KAAK,CAACqB,GAAN,CAAU,6BAAV,C;;;AAAZC,gBAAAA,G;AACAlB,gBAAAA,I,GAAOkB,GAAG,CAAClB,I;AAEXmB,gBAAAA,O,GAAUnB,IAAI,CAACoB,GAAL,CAAS,UAACC,CAAD;AAAA,yBAAQ;AAC/BC,oBAAAA,KAAK,EAAED,CAAC,CAACT,EADsB;AAE/BW,oBAAAA,KAAK,YAAKF,CAAC,CAACR,QAAP,cAAmBQ,CAAC,CAACP,aAArB,cAAsCO,CAAC,CAACN,WAAxC,cAAuDM,CAAC,CAACL,WAAzD;AAF0B,mBAAR;AAAA,iBAAT,C;AAKhB,qBAAKQ,QAAL,CAAc;AAAEb,kBAAAA,aAAa,EAAEQ;AAAjB,iBAAd;;;;;;;;;;;;;;;;;;iCAGWM,C,EAAG;AACd,WAAKD,QAAL,CAAc;AACZZ,QAAAA,EAAE,EAAEa,CAAC,CAACH,KADM;AAEZT,QAAAA,QAAQ,EAAEY,CAAC,CAACF,KAFA,CAGZ;AACA;AACA;;AALY,OAAd;AAOD;;;wCAEmB;AAClB,WAAKG,UAAL;AACD;;;6BAEQ;AACPtB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKK,KAAL,CAAWC,aAAvB;AACA,0BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,aADtB;AAEE,QAAA,QAAQ,EAAE,KAAKgB,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAFZ;AAGE,QAAA,MAAM,EAAE/B,YAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAS,KAAKa,KAAL,CAAWG,QAApB,CADF,CANF,CADF;AAYD;;;;EArDuCnB,S;;SAArBc,Y","sourcesContent":["// I created a Fake REST API with JSON-Server, named as db.json\r\n// db.json is going to act as our backened data store\r\nimport React, { Component } from \"react\";\r\nimport Select from \"react-select\";\r\nimport axios from \"axios\";\r\n\r\nconst colourStyles = {\r\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n    // const color = chroma(data.color);\r\n    console.log({ data, isDisabled, isFocused, isSelected });\r\n    return {\r\n      ...styles,\r\n      backgroundColor: isFocused ? \"blue\" : null,\r\n      color: \"#333333\"\r\n    };\r\n  }\r\n};\r\n\r\nexport default class CustomSelect extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectOptions: [],\r\n      id: \"\",\r\n      sortCode: \"\",\r\n      accountNumber: \"\",\r\n      accountType: \"\",\r\n      accountName: \"\",\r\n    };\r\n  }\r\n\r\n  async getOptions() {\r\n    const res = await axios.get(\"http://localhost:5000/users\");\r\n    const data = res.data;\r\n\r\n    const options = data.map((d) => ({\r\n      value: d.id,\r\n      label: `${d.sortCode} ${d.accountNumber} ${d.accountType} ${d.accountName}`,\r\n    }));\r\n\r\n    this.setState({ selectOptions: options });\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({\r\n      id: e.value,\r\n      sortCode: e.label,\r\n      // accountNumber: e.label,\r\n      // accountType: e.label,\r\n      // accountName: e.label,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getOptions();\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.selectOptions);\r\n    return (\r\n      <div className=\"Home\">\r\n        <Select\r\n          options={this.state.selectOptions}\r\n          onChange={this.handleChange.bind(this)}\r\n          styles={colourStyles}\r\n        />\r\n        <p>\r\n          <strong>{this.state.sortCode}</strong>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}