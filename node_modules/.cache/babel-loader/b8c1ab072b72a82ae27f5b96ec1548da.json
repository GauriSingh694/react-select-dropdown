{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\gsingh1\\\\Documents\\\\reduxsaga\\\\hello\\\\gauri-singh\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\gsingh1\\\\Documents\\\\reduxsaga\\\\hello\\\\gauri-singh\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\gsingh1\\\\Documents\\\\reduxsaga\\\\hello\\\\gauri-singh\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\gsingh1\\\\Documents\\\\reduxsaga\\\\hello\\\\gauri-singh\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\gsingh1\\\\Documents\\\\reduxsaga\\\\hello\\\\gauri-singh\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\gsingh1\\\\Documents\\\\reduxsaga\\\\hello\\\\gauri-singh\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\gsingh1\\\\Documents\\\\reduxsaga\\\\hello\\\\gauri-singh\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _objectSpread from \"C:\\\\Users\\\\gsingh1\\\\Documents\\\\reduxsaga\\\\hello\\\\gauri-singh\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\gsingh1\\\\Documents\\\\reduxsaga\\\\hello\\\\gauri-singh\\\\src\\\\CustomSelect.js\";\n// I created a Fake REST API with JSON-Server, named as db.json\n// db.json is going to act as our backened data store\nimport React, { Component } from \"react\"; // import React, { Component } lets you do class Happy extends Component instead of class Menu extends React.Component.\n// It's less typing and duplication of the React namespace, which is generally a desired modern coding convention.\n\nimport Select from \"react-select\";\nimport axios from \"axios\"; // const tick = (e) => {\n// \treturn (\n//         <div className=\"shoe-container\">\n//         <img src={process.env.PUBLIC_URL + '/green-tick.png'} />;\n//         </div>\n//     );\n//   }\n// const dot = (color = '#ccc') => ({\n//   alignItems: 'center',\n//   display: 'flex',\n//   ':before': {\n//     backgroundColor: color,\n//     borderRadius: 10,\n//     content: '\" \"',\n//     display: 'block',\n//     marginRight: 8,\n//     height: 10,\n//     width: 10,\n//   },\n// });\n\nvar customStyles = function customStyles() {\n  return {\n    option: function option(provided, state) {\n      return _objectSpread({}, provided, {\n        borderBottom: '2px dotted blue',\n        color: state.isSelected ? 'yellow' : 'black',\n        backgroundColor: state.isSelected ? 'green' : 'white',\n        backgroundimage: state.isSelected ? URL('/green-tick.png') : 'white'\n      });\n    },\n    control: function control(provided) {\n      return _objectSpread({}, provided, {\n        marginTop: \"5%\"\n      });\n    }\n  };\n};\n\nvar CustomSelect = /*#__PURE__*/function (_Component) {\n  _inherits(CustomSelect, _Component);\n\n  function CustomSelect(props) {\n    var _this;\n\n    _classCallCheck(this, CustomSelect);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CustomSelect).call(this, props));\n    _this.state = {\n      selectOptions: [],\n      id: \"\",\n      sortCode: \"\",\n      accountNumber: \"\",\n      accountType: \"\",\n      accountName: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(CustomSelect, [{\n    key: \"getOptions\",\n    value: function () {\n      var _getOptions = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res, data, options;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"http://localhost:5000/users\");\n\n              case 2:\n                res = _context.sent;\n                data = res.data;\n                options = data.map(function (d) {\n                  return {\n                    value: d.id,\n                    label: \"\".concat(d.sortCode, \" \").concat(d.accountNumber, \" \").concat(d.accountType, \" \").concat(d.accountName)\n                  };\n                });\n                this.setState({\n                  selectOptions: options\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getOptions() {\n        return _getOptions.apply(this, arguments);\n      }\n\n      return getOptions;\n    }()\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.setState({\n        id: e.value,\n        sortCode: e.label // accountNumber: e.label,\n        // accountType: e.label,\n        // accountName: e.label,\n\n      });\n    } // onRenderOption = (options) => {\n    //   return (\n    //     <>\n    //       <div className={options.isChecked ? 'ms-Icon ms-Icon--CheckMark' : ''}>\n    //         {option.text}\n    //       </div>\n    //     </>\n    //   );\n    // };\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getOptions();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.selectOptions);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Select // multiselect\n      // styles={customStyles}\n      , {\n        options: this.state.selectOptions,\n        onChange: this.handleChange.bind(this) // onRenderOption={this.onRenderOption}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      }, this.state.sortCode)));\n    }\n  }]);\n\n  return CustomSelect;\n}(Component);\n\nexport { CustomSelect as default };","map":{"version":3,"sources":["C:/Users/gsingh1/Documents/reduxsaga/hello/gauri-singh/src/CustomSelect.js"],"names":["React","Component","Select","axios","customStyles","option","provided","state","borderBottom","color","isSelected","backgroundColor","backgroundimage","URL","control","marginTop","CustomSelect","props","selectOptions","id","sortCode","accountNumber","accountType","accountName","get","res","data","options","map","d","value","label","setState","e","getOptions","console","log","handleChange","bind"],"mappings":"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","sourcesContent":["// I created a Fake REST API with JSON-Server, named as db.json\r\n// db.json is going to act as our backened data store\r\n\r\nimport React, { Component } from \"react\";\r\n// import React, { Component } lets you do class Happy extends Component instead of class Menu extends React.Component.\r\n// It's less typing and duplication of the React namespace, which is generally a desired modern coding convention.\r\nimport Select from \"react-select\";\r\nimport axios from \"axios\";\r\n\r\n// const tick = (e) => {\r\n// \treturn (\r\n//         <div className=\"shoe-container\">\r\n//         <img src={process.env.PUBLIC_URL + '/green-tick.png'} />;\r\n//         </div>\r\n//     );\r\n//   }\r\n// const dot = (color = '#ccc') => ({\r\n//   alignItems: 'center',\r\n//   display: 'flex',\r\n\r\n//   ':before': {\r\n//     backgroundColor: color,\r\n//     borderRadius: 10,\r\n//     content: '\" \"',\r\n//     display: 'block',\r\n//     marginRight: 8,\r\n//     height: 10,\r\n//     width: 10,\r\n//   },\r\n// });\r\n\r\nconst customStyles = () => ({\r\n  option: (provided, state) => ({ //data, isDisabled, isFocused, isSelected\r\n    ...provided,\r\n    borderBottom: '2px dotted blue',\r\n    color: state.isSelected ? 'yellow' : 'black',\r\n    backgroundColor: state.isSelected ? 'green' : 'white',\r\n    backgroundimage: state.isSelected? URL('/green-tick.png') : 'white'\r\n  }),\r\n  control: (provided) => ({\r\n    ...provided,\r\n    marginTop: \"5%\"\r\n  })\r\n});\r\n\r\nexport default class CustomSelect extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectOptions: [],\r\n      id: \"\",\r\n      sortCode: \"\",\r\n      accountNumber: \"\",\r\n      accountType: \"\",\r\n      accountName: \"\",\r\n    };\r\n  }\r\n\r\n  async getOptions() {\r\n    const res = await axios.get(\"http://localhost:5000/users\");\r\n    const data = res.data;\r\n\r\n    const options = data.map((d) => ({\r\n      value: d.id,\r\n      label: `${d.sortCode} ${d.accountNumber} ${d.accountType} ${d.accountName}`,\r\n    }));\r\n\r\n    this.setState({ selectOptions: options });\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({\r\n      id: e.value,\r\n      sortCode: e.label,\r\n      // accountNumber: e.label,\r\n      // accountType: e.label,\r\n      // accountName: e.label,\r\n    });\r\n  }\r\n\r\n  // onRenderOption = (options) => {\r\n  //   return (\r\n  //     <>\r\n  //       <div className={options.isChecked ? 'ms-Icon ms-Icon--CheckMark' : ''}>\r\n  //         {option.text}\r\n  //       </div>\r\n  //     </>\r\n  //   );\r\n  // };\r\n\r\n  componentDidMount() {\r\n    this.getOptions();\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.selectOptions);\r\n    return (\r\n      <div>\r\n        <Select\r\n          // multiselect\r\n          // styles={customStyles}\r\n          options={this.state.selectOptions}\r\n          onChange={this.handleChange.bind(this)}\r\n          // onRenderOption={this.onRenderOption}\r\n        />\r\n        <p>\r\n          <strong>{this.state.sortCode}</strong>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}